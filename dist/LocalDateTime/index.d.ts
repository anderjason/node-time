import { Instant } from "@anderjason/time";
import { Duration } from "@anderjason/time";
import { TimeZone } from "../TimeZone";
import { AbstractDateTime, SortableDateStringFormat, SortableTimeStringFormat, SortableDateTimeStringFormat, WrittenDateStringFormat } from "../AbstractDateTime";
export declare class LocalDateTime {
    private _abstractDateTime;
    private _timeZone;
    static ofDateParts(calendarYear: number, calendarMonth: number, calendarDay: number, timeZone: TimeZone): LocalDateTime;
    static ofAbstractDateTime(abstractDateTime: AbstractDateTime, timeZone: TimeZone): LocalDateTime;
    static ofToday(timeZone: TimeZone, hours24: number, minutes: number, seconds?: number, milliseconds?: number): LocalDateTime;
    static ofBeginningOfToday(timeZone: TimeZone): LocalDateTime;
    static ofBeginningOfThisWeek(timeZone: TimeZone): LocalDateTime;
    static ofEndOfThisWeek(timeZone: TimeZone): LocalDateTime;
    static ofEndOfToday(timeZone: TimeZone): LocalDateTime;
    static ofInstant(instant: Instant, timeZone: TimeZone): LocalDateTime;
    static ofNow(timeZone: TimeZone): LocalDateTime;
    private constructor();
    withTimeParts(hours24: number, minutes: number, seconds?: number, milliseconds?: number): LocalDateTime;
    withDateParts(calendarYear: number, calendarMonth: number, calendarDay: number): LocalDateTime;
    withoutMilliseconds(): LocalDateTime;
    withoutSeconds(): LocalDateTime;
    withAddedDuration(duration: Duration): LocalDateTime;
    withBeginningOfDay(): LocalDateTime;
    withEndOfDay(): LocalDateTime;
    withBeginningOfWeek(): LocalDateTime;
    withEndOfWeek(): LocalDateTime;
    withBeginningOfMonth(): LocalDateTime;
    toSortableDateString(format: SortableDateStringFormat): string;
    toSortableTimeString(format: SortableTimeStringFormat): string;
    toSortableDateTimeString(format: SortableDateTimeStringFormat): string;
    toWrittenDateString(format: WrittenDateStringFormat): string;
    toFlexibleTimeString(): string;
    toCalendarYear(): number;
    toCalendarMonth(): number;
    toCalendarDay(): number;
    toHours24(): number;
    toHours12(): number;
    toAmPm(): "a.m." | "p.m.";
    toMinutes(): number;
    toSeconds(): number;
    toMilliseconds(): number;
    toDayOfWeek(): number;
    toTimeZone(): TimeZone;
    toInstant(): Instant;
    toAbstractDateTime(): AbstractDateTime;
}
